{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aviox/Desktop/Renuka/hangman/reactApp/src/Game.js\";\nimport React, { Component } from \"react\";\nconst words = [{\n  Food: [\"Pizza\", \"Burger\", \"Patty\", \"Rice\", \"Pulses\"]\n}, {\n  Fruit: [\"Apple\", \"Banana\", \"Mango\", \"Orange\", \"Pomegranate\"]\n}, {\n  Country: [\"USA\", \"India\", \"UK\", \"Pakistan\", \"Japan\"]\n}];\nlet letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.shuffleWord = () => {\n      let category = words[Math.floor(Math.random() * words.length)];\n      let word = category[Math.floor(Math.random() * category.length)];\n      this.setState({\n        selected_category: category,\n        selected_word: word,\n        timer: 100\n      });\n    };\n\n    this.state = {\n      selected_category: {},\n      selected_word: \"\",\n      retries: 0,\n      timer: 100\n    };\n  }\n\n  componentDidMount() {\n    let category = words[Math.floor(Math.random() * words.length)];\n    let cat_words = Object.values(this.state.selected_category);\n    let word = cat_words[Math.floor(Math.random() * cat_words.length)];\n    console.log(\"word\", word, category);\n    this.setState({\n      selected_category: category,\n      selected_word: word\n    });\n    setInterval(() => this.setState({\n      timer: this.state.timer - 1\n    }), 1000);\n  }\n\n  onLetterCLick(letter, e) {\n    e.preventDefault();\n    console.log(\"12121212\", this.state.selected_word);\n    const firstIndex = this.state.selected_word && this.state.selected_word.indexOf(letter);\n    console.log(\"firstIndex\", firstIndex, this.state.selected_word);\n\n    if (firstIndex !== -1) {\n      const letters = this.state.letters.map(letterObject => {\n        if (letterObject.value === letter) {\n          return Object.assign({}, letterObject, {\n            guessed: true\n          });\n        }\n\n        return letterObject;\n      }); // Check if the game has been won\n\n      const gameWon = letters.reduce((winState, currentObject) => {\n        return winState && currentObject.guessed;\n      }, true);\n      this.setState((prevState, props) => {\n        return {\n          letters,\n          pastGuesses: [letter].concat(prevState.pastGuesses) // gameState: gameWon ? GAME_WON : GAME_STARTED,\n\n        };\n      });\n    } else {\n      this.setState((prevState, props) => {\n        // Update number of attempts left\n        const guessesLeft = prevState.guesses - 1;\n        let stateUpdate = {\n          guesses: guessesLeft\n        }; // Kill the game if needed\n\n        if (guessesLeft === 0) {// stateUpdate.gameState = GAME_OVER;\n        } // Update the letters already tried\n\n\n        stateUpdate.pastGuesses = [letter].concat(prevState.pastGuesses);\n        return stateUpdate;\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-2\",\n        children: \"The Hangman Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-clock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: [\" \", this.state.timer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hang-person\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ground\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"person\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"head\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-word\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"newword-btn\",\n              onClick: () => this.shuffleWord(),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-redo-alt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"New Word\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"CATEGORY: \", Object.keys(this.state.selected_category)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            minLength: 1,\n            maxLength: 1,\n            name: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            minLength: 1,\n            maxLength: 1,\n            name: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            minLength: 1,\n            maxLength: 1,\n            name: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            minLength: 1,\n            maxLength: 1,\n            name: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            minLength: 1,\n            maxLength: 1,\n            name: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: letters.map(letter => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: e => this.onLetterCLick(letter, e),\n            className: \"LetterBlock\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: letter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            children: \"Save Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/aviox/Desktop/Renuka/hangman/reactApp/src/Game.js"],"names":["React","Component","words","Food","Fruit","Country","letters","Game","constructor","props","shuffleWord","category","Math","floor","random","length","word","setState","selected_category","selected_word","timer","state","retries","componentDidMount","cat_words","Object","values","console","log","setInterval","onLetterCLick","letter","e","preventDefault","firstIndex","indexOf","map","letterObject","value","assign","guessed","gameWon","reduce","winState","currentObject","prevState","pastGuesses","concat","guessesLeft","guesses","stateUpdate","render","keys"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nconst words = [\n  {\n    Food: [\"Pizza\", \"Burger\", \"Patty\", \"Rice\", \"Pulses\"],\n  },\n  { Fruit: [\"Apple\", \"Banana\", \"Mango\", \"Orange\", \"Pomegranate\"] },\n  { Country: [\"USA\", \"India\", \"UK\", \"Pakistan\", \"Japan\"] },\n];\n\nlet letters = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n];\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected_category: {},\n      selected_word: \"\",\n      retries: 0,\n      timer: 100,\n    };\n  }\n\n  componentDidMount() {\n    let category = words[Math.floor(Math.random() * words.length)];\n    let cat_words = Object.values(this.state.selected_category);\n    let word = cat_words[Math.floor(Math.random() * cat_words.length)];\n    console.log(\"word\", word, category);\n    this.setState({ selected_category: category, selected_word: word });\n    setInterval(() => this.setState({ timer: this.state.timer - 1 }), 1000);\n  }\n\n  shuffleWord = () => {\n    let category = words[Math.floor(Math.random() * words.length)];\n    let word = category[Math.floor(Math.random() * category.length)];\n    this.setState({\n      selected_category: category,\n      selected_word: word,\n      timer: 100,\n    });\n  };\n\n  onLetterCLick(letter, e) {\n    e.preventDefault();\n    console.log(\"12121212\", this.state.selected_word);\n    const firstIndex =\n      this.state.selected_word && this.state.selected_word.indexOf(letter);\n    console.log(\"firstIndex\", firstIndex, this.state.selected_word);\n    if (firstIndex !== -1) {\n      const letters = this.state.letters.map((letterObject) => {\n        if (letterObject.value === letter) {\n          return Object.assign({}, letterObject, {\n            guessed: true,\n          });\n        }\n\n        return letterObject;\n      });\n\n      // Check if the game has been won\n      const gameWon = letters.reduce((winState, currentObject) => {\n        return winState && currentObject.guessed;\n      }, true);\n\n      this.setState((prevState, props) => {\n        return {\n          letters,\n          pastGuesses: [letter].concat(prevState.pastGuesses),\n          // gameState: gameWon ? GAME_WON : GAME_STARTED,\n        };\n      });\n    } else {\n      this.setState((prevState, props) => {\n        // Update number of attempts left\n        const guessesLeft = prevState.guesses - 1;\n        let stateUpdate = {\n          guesses: guessesLeft,\n        };\n\n        // Kill the game if needed\n        if (guessesLeft === 0) {\n          // stateUpdate.gameState = GAME_OVER;\n        }\n\n        // Update the letters already tried\n        stateUpdate.pastGuesses = [letter].concat(prevState.pastGuesses);\n\n        return stateUpdate;\n      });\n    }\n  }\n  render() {\n    return (\n      <div className=\"main-area\">\n        <h2 className=\"text-center mb-2\">The Hangman Game</h2>\n        <div className=\"main-layout\">\n          <div className=\"game-display\">\n            <div className=\"timer\">\n              <i className=\"far fa-clock\" />\n              <span className=\"time\"> {this.state.timer}</span>\n            </div>\n            <div className=\"hang-person\">\n              <div className=\"stand\" />\n              <div className=\"ground\" />\n              <div className=\"person\">\n                <div className=\"head\" />\n                <div className=\"body\" />\n              </div>\n            </div>\n            <div className=\"new-word\">\n              <button\n                className=\"newword-btn\"\n                onClick={() => this.shuffleWord()}\n              >\n                <i className=\"fas fa-redo-alt\" /> <span>New Word</span>\n              </button>\n            </div>\n          </div>\n          <div className=\"word-field\">\n            <span>CATEGORY: {Object.keys(this.state.selected_category)}</span>\n            <input type=\"text\" minLength={1} maxLength={1} name />\n            <input type=\"text\" minLength={1} maxLength={1} name />\n            <input type=\"text\" minLength={1} maxLength={1} name />\n            <input type=\"text\" minLength={1} maxLength={1} name />\n            <input type=\"text\" minLength={1} maxLength={1} name />\n          </div>\n          <div>\n            {letters.map((letter) => (\n              <div\n                onClick={(e) => this.onLetterCLick(letter, e)}\n                className=\"LetterBlock\"\n              >\n                <span>{letter}</span>\n              </div>\n            ))}\n          </div>\n          <div className=\"text-center\">\n            <button className=\"save-btn\">Save Game</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}